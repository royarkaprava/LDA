#   }
#   priorbeta[i, ] <- rep(rgamma(1, ae, be), m-1)
# }
# ae <- (m-1)*m/2 + 0.1
# be <- sum(B^2)/2 + 0.1
# if(scasig){
#   be <- sum(B1^2/matrix(d^2, m, m-1))/2 + 0.1
# }
# priorbeta <- matrix(rgamma(1, ae, be), m, m-1)
for(j in 1:m){
ae <- (m-1)/2 + 0.1
be <- sum(B[j,]^2)/2 + 0.1
if(scasig){
be <- sum(B1[j,]^2/d[j]^2/2) + 0.1
}
priorbeta[j,] <- rep(rgamma(1, ae, be), m-1)
}
#diag(priorbeta) <- 0
}
if(horseshoe){
if(scasig){
for(j in 1:m){
lamhorse[j, ] <- sqrt(1/rgamma(m-1, 1, 1/nuhorse[j, ] + B1[j,]^2/2/tauhorse^2/d[j]^2))
nuhorse[j, ] <- 1/rgamma(m-1, 1, 1+1/lamhorse[j,]^2)
}
tauhorse   <- sqrt(1/rgamma(1, m*(m-1)/2+1/2, 1/xihorse + sum(B1^2/2/lamhorse^2/matrix(d^2,m,m-1))))
xihorse   <- 1/rgamma(1, 1, 1+1/tauhorse^2)
}
if(!scasig){
for(j in 1:m){
lamhorse[j, ] <- sqrt(1/rgamma(m-1, 1, 1/nuhorse[j, ] + B1[j,]^2/2/tauhorse^2))
nuhorse[j, ] <- 1/rgamma(m-1, 1, 1+1/lamhorse[j,]^2)
}
tauhorse   <- sqrt(1/rgamma(1, m*(m-1)/2+1/2, 1/xihorse + sum(B1^2/2/lamhorse^2)))
xihorse   <- 1/rgamma(1, 1, 1+1/tauhorse^2)
}
priorbeta <- 1/(lamhorse^2 * tauhorse^2)
}
if(itr > 00){
residY = data-B%*%data
#Update d
d <- unlist(parallel::mcmapply(1:m, FUN=upD))
}
sigu <- rep(1, m)
if(scasig) {sigu<- (d)^2}
#SPre_p[[itr]] <- t(diag(m)-B)%*%diag(1/d^2)%*%t(diag(m)-B)
#Update dynamic
datamod <- diag(1/d) %*% (diag(m)-B) %*% data
for(i in 1:m){
temp       <- HMC(U, grad_U, sdden[i], L =30, delta[i, ], i, arden[i])
delta[i, ] <- temp$up#t(temp[1:J, ])
arden[i]   <- temp$arc#temp[J+1, ]
#update sigden
if(itr %% 50==0){
al <- 0.1 + J / 2
be <- 0.1 + sum((delta[i, ]) * (Amat %*% array(delta[i, ])))/2
sigden[i] <- sqrt(1 / rgamma(1, al, be))
}
}
# for(i in 1:r){
#   temp       <- HMC(Uxij, grad_Uxij, sddenxi[i], L =1, xi[, i], i, ardenxi[i])
#   xi[, i] <- temp$up#t(temp[1:J, ])
#   ardenxi[i]   <- temp$arc#temp[J+1, ]
#
#   temp       <- HMC(Uetaj, grad_Uetaj, sddeneta[i], L =1, eta[, i], i, ardeneta[i])
#   eta[, i] <- temp$up#t(temp[1:J, ])
#   ardeneta[i]   <- temp$arc#temp[J+1, ]
#
#   #update sigden
#   # if(itr %% 50==0){
#   #   al <- 0.1 + m / 2
#   #   be <- 0.1 + sum(xi[, i]^2)/2#sum((delta[i, ]) * (Amat %*% array(delta[i, ])))/2
#   #   sigxi[i] <- sqrt(1 / rgamma(1, al, be))
#   # }
#   #
#   # #update sigden
#   # #update sigden
#   # if(itr %% 50==0){
#   #   al <- 0.1 + J / 2
#   #   be <- 0.1 + sum((eta[, i]) * (Amat %*% array(eta[, i])))/2
#   #   sigeta[i] <- sqrt(1 / rgamma(1, al, be))
#   # }
# }
#
# #update sigden
# if(itr %% 1==0){
#   al <- 0.1 + m*r / 2
#   be <- 0.1 + sum(xi^2)/2#sum((delta[i, ]) * (Amat %*% array(delta[i, ])))/2
#   sigxi <- rep(sqrt(1 / rgamma(1, al, be)), r)
# }
# if(itr %% 1==0){
#   al <- 0.1 + J*r / 2
#   be <- 0.1 + sum(eta * (Amat %*% eta))/2
#   sigeta <- rep(sqrt(1 / rgamma(1, al, be)), r)
# }
# delta <- tcrossprod(xi, eta)
delta_p[[itr]] <- delta
#if(itr > noup){
#itrR <- itr-noup1
if(itr %% 100 == 0){
for(i in 1:m){
ar <- arden[i]/(itr)
#cat(ar, "for compo = ", i)
if(ar<.60){sdden[i] <- sdden[i] / 10}
if(ar>.90){sdden[i] <- sdden[i] * 10}
}
for(i in 1:r){
ar <- ardenxi[i]/(itr)
#cat(ar, "for compo = ", i)
if(ar<.45){sddenxi[i] <- sddenxi[i] / 10}
if(ar>.70){sddenxi[i] <- sddenxi[i] * 10}
ar <- ardeneta[i]/(itr)
#cat(ar, "for compo = ", i)
if(ar<.45){sddeneta[i] <- sddeneta[i] / 10}
if(ar>.70){sddeneta[i] <- sddeneta[i] * 10}
}
# if(itr > noupd){
#   ar <- ard / (itr-noupd)
#   cat(ar, "for dvec")
#   if(ar<.60){sdd <- sdd / 10}
#   if(ar>.90){sdd <- sdd * 10}
# }
# if(itr > noup){
#   for(i in 1:q){
#     ar <- arL[i]/(itr-noup)
#     #cat(ar, "for compo = ", i)
#     if(ar<.45){sdL[i] <- sdL[i] / 10}
#     if(ar>.70){sdL[i] <- sdL[i] * 10}
#   }
# }
cat(mean(arden)/(itr), "for compo")
print(mean((Bdag0[ind1] - B[ind1])^2))
# print(mean(abs(B[ind1])))
# print(mean(abs(B[ind0])))
# print(range(d))
print(sum((abs(B[ind1])>0)))
print(sum((abs(B[ind0])>0)))
TP <- sum((B[ind1]>0))
FP <- sum((B[ind0]>0))
FN <- sum((B[ind1]==0))
TN <- sum((B[ind0]==0))
print((TP*TN - FP*FN) / (sqrt(TP+FP)*sqrt(TP+FN)*sqrt(TN+FP)*sqrt(TN+FN)))
}
#print(range(abs(SPre[t(index)])))
#}
# print(range(SPre))
#print(range(delta))
#print(itr)
#toc()
}
M2 <- 10000
M1 <- 5000
index <- as.matrix(combinat::combn(1:m, 2))
pdmates  <- matrix(0, m^2, M2-M1+1)
pdmates0 <- matrix(0, ncol(index), M2-M1+1)
# Blsp <- Reduce('+', Bls[M1:M2])/(M2-M1+1)
#
# pdmatt <- Bdag0[t(index)]
# ind1 <- which(pdmatt==1)
# ind0 <- which(pdmatt==0)
# range(abs(Lvecc[which(Lvecc!=0)]))
#
# thl <- min(abs(Lvecc[which(Lvecc!=0)])) + diff(range(abs(Lvecc[which(Lvecc!=0)])))*(1:10)/10
#thl <- c(thl[1]-thl[1]*(3:1)/4, thl)
# TP <- rep(0, 10)
# FP <- rep(0, 10)
for(i in M1:M2){
pdmates[, i-M1+1] <- (abs(Bls[[i]])>0) #* temp #/ sqrt(diagS[index[1, ]]*diagS[index[2, ]])
}
Bb <- matrix((rowMeans(pdmates) > 0.9), m, m)
TP <- sum((Bb[ind1]>0))
FP <- sum((Bb[ind0]>0))
FN <- sum((Bb[ind1]==0))
TN <- sum((Bb[ind0]==0))
(TP*TN - FP*FN) / (sqrt(TP+FP)*sqrt(TP+FN)*sqrt(TN+FP)*sqrt(TN+FN))
data<-read.csv("H:/Documents/MiM/RestingState_concatenated_23Sep1.csv", header = T)
segscores <-  data[, 2:11]
mat <- matrix(0, nrow(data), 2)
mat[which(data$Group==1), 1] <- 1
mat[which(data$Group==3), 2] <- 1
behav <- cbind(data[, c("gaitspeed_400m", "sex_mr")], "grp1"=mat[,1], "grp3"=mat[,2])  #"sex_mr"
#I always like to make the middle group baseline for better inference
library(mdatools)
m = pls(pca.mvreplace(behav), pca.mvreplace(segscores), 7, scale = TRUE, cv = 1)
summary(m$coeffs)
View(pdmates0)
View(pdmates0)
file.chose
file.chose()
file.choose()
library(oro.nifti)
library(dcm2niir)
F12 <- "U:\\fMRI_process\\ADNI\\100_S_4469\\Resting_State_fMRI\\2013-04-11_13_24_30.0\\I366944"
temp  <- dcm2niir::dcm2nii(F12)
file.choose()
?writenii
??writenii
MGMM::rGMM(n, d = 10, k = 2, pi = c(0.5,0.5), miss = 0, means = NULL, covs = NULL)
n <- 100
MGMM::rGMM(n, d = 10, k = 2, pi = c(0.5,0.5), miss = 0, means = NULL, covs = NULL)
out <- MGMM::rGMM(n, d = 10, k = 2, pi = c(0.5,0.5), miss = 0, means = NULL, covs = NULL)
dim(out)
T1filels <- list.files("H:\\Dog Scans data/NifTi",recursive=T, pattern = "T1")
T1filels
AXT1filels <- list.files("H:\\Dog Scans data/NifTi",recursive=T, pattern = "AX_T1")
AXT1filels
mat2 <- readNIfTI("3 2122019/AX_T1_20190212104409_11001.nii.gz", reorient = F)
setwd("H:\\Dog Scans data")
mat2 <- readNIfTI("3 2122019/AX_T1_20190212104409_11001.nii.gz", reorient = F)
mat2 <- readNIfTI(AXT1filels[7], reorient = F)
library(oro.nifti)
setwd("H:\\Dog Scans data/NifTi")
mat2 <- readNIfTI("3 2122019/AX_T1_20190212104409_11001.nii.gz", reorient = F)
mat3 <- readNIfTI("3 3122019/AX_T1_20190312111242_7001.nii.gz", reorient = F)
result <- RNiftyReg::niftyreg(mat3, mat2, scope="affine", interpolation=0)
#result <- RNiftyReg::niftyreg.linear(mat3, mat2, scope="rigid")
#result <- RNiftyReg::niftyreg(mat1, mat2, scope="affine", interpolation=0)
mat32 <- result$image
image.plot(mat32[,,10])
library(fields)
image.plot(mat32[,,10])
image.plot(mat2[,,10])
image.plot(mat32[,,10])
image.plot(mat3[,,10])
for(i in 1:23){
result <- RNiftyReg::niftyreg(mat3[,,i], mat2[,,i], scope="affine", interpolation=0)
mat32[,,i] <- result$image
}
image.plot(mat32[,,10])
image.plot(mat2[,,10])
?niftyreg
result <- RNiftyReg::niftyreg(mat3, mat2, scope="nonlinear", interpolation=0)
#result <- RNiftyReg::niftyreg.linear(mat3, mat2, scope="rigid")
#result <- RNiftyReg::niftyreg(mat1, mat2, scope="affine", interpolation=0)
mat32 <- result$image
image.plot(mat32[,,10])
image.plot(mat2[,,10])
image.plot(mat3[,,10])
source("https://neuroconductor.org/neurocLite.R")
neuroc_install("kirby21.smri")
load("W:/ark007/ark007/Processed FA data/ADNIDNAEtcFAimage.rda")
length(datals)
length(datalist)
rm(list = ls())
setwd("H:/Documents/GitHub/LDA/Codes")
data <- read.table("H:/Documents/Course to teach/LDA/LDA/Slides/Treatment of Lead Exposed Children Trial.txt", quote="\"", comment.char="")
library(tidyr)
data_long <- gather(data, Week, measurement, V3:V6, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
data_new = data_long
data_new$Week <- as.character(data_new$Week)
data_new$Week[grep("V3", data_long$Week)] = "0"
data_new$Week[grep("V4", data_long$Week)] = "1"
data_new$Week[grep("V5", data_long$Week)] = "4"
data_new$Week[grep("V6", data_long$Week)] = "6"
data_new$Week <- as.numeric(data_new$Week)
gc()
data_new$Week <- as.factor(data_new$Week)
contr.poly(4)
contrasts(data_new$Week) = contr.poly(4)
summary(lm(measurement ~ Week, data=data_new))
data_new$Week
summary(lme(measurement ~ Week, random = ~1|V1, data = data_new))
library(nlme)
summary(lme(measurement ~ Week, random = ~1|V1, data = data_new))
data_new$Week <- as.factor(data_new$Week)
contr.poly(5)
contrasts(data_new$Week) = contr.poly(5)
Treatment.of.Lead.Exposed.Children.Trial <- read.table("H:/Documents/GitHub/LDA/Codes/Treatment of Lead Exposed Children Trial.txt", quote="\"", comment.char="")
View(Treatment.of.Lead.Exposed.Children.Trial)
Data.on.seizure.counts <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
View(Data.on.seizure.counts)
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
colnames(data)
library(tidyr)
data_long <- gather(data, Week, measurement, V4:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
data_new = data_long
data_new$Week <- as.character(data_new$Week)
data_new$Week
data_new = data_long
data_new$Week <- as.character(data_new$Week)
data_new$Week[grep("V4", data_long$Week)] = "0"
data_new$Week[grep("V5", data_long$Week)] = "1"
data_new$Week[grep("V6", data_long$Week)] = "2"
data_new$Week[grep("V7", data_long$Week)] = "3"
data_new$Week[grep("V8", data_long$Week)] = "4"
data_new$Week <- as.numeric(data_new$Week)
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
library(tidyr)
data_long <- gather(data, Week, measurement, V5:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
View(data_long)
View(data)
####
colname(data_long$V4) = "Baseline"
####
col.name(data_long$V4) = "Baseline"
colnames(data_long)
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
library(tidyr)
data_long <- gather(data, Week, measurement, V5:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
####
colnames(data_long)[4] = "Baseline"
colnames(data_long)[1] = "Subject"
colnames(data_long)[2] = "Treatment"
colnames(data_long)[3] = "Age"
data_new = data_long
data_new$Week <- as.character(data_new$Week)
#data_new$Week[grep("V4", data_long$Week)] = "0"
data_new$Week[grep("V5", data_long$Week)] = "1"
data_new$Week[grep("V6", data_long$Week)] = "2"
data_new$Week[grep("V7", data_long$Week)] = "3"
data_new$Week[grep("V8", data_long$Week)] = "4"
data_new$Week <- as.numeric(data_new$Week)
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
library(tidyr)
data_long <- gather(data, Week, measurement, V5:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
####
colnames(data_long)[4] = "Baseline"
colnames(data_long)[1] = "Subject"
colnames(data_long)[2] = "Treatment"
colnames(data_long)[3] = "Age"
data_new = data_long
data_new$Week <- as.character(data_new$Week)
#data_new$Week[grep("V4", data_long$Week)] = "0"
data_new$Week[grep("V5", data_long$Week)] = "1"
data_new$Week[grep("V6", data_long$Week)] = "2"
data_new$Week[grep("V7", data_long$Week)] = "3"
data_new$Week[grep("V8", data_long$Week)] = "4"
data_new$Week <- as.numeric(data_new$Week)
data_new$Treatment <- as.factor(data_new$Treatment)
library(nlme)
res <- lme(measurement ~ Week, random = ~1|Subject, data = data_new)
res.AR1 <- update(res, correlation = corAR1())
res.ARMA11 <- update(res, corr = corARMA(p = 1, q = 1))
fm1 <- lme(measurement ~ Week, random = ~1|Subject, data = data_new)
ACF(fm1, maxLag = 3)
ctrl <- lmeControl(opt='optim'); #lmeControl(msMaxIter = 1000, msMaxEval = 1000)
res <- lme(measurement ~ Week, random = ~Week|Subject,control = ctrl, data = data_new)
##Generalized least square############
fm1 <- gls(measurement ~ Week, data_new,
correlation = corAR1(form = ~ 1 | Subject))
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
library(tidyr)
data_long <- gather(data, Week, measurement, V5:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
####
colnames(data_long)[4] = "Baseline"
colnames(data_long)[1] = "Subject"
colnames(data_long)[2] = "Treatment"
colnames(data_long)[3] = "Age"
data_new = data_long
data_new$Week <- as.character(data_new$Week)
#data_new$Week[grep("V4", data_long$Week)] = "0"
data_new$Week[grep("V5", data_long$Week)] = "1"
data_new$Week[grep("V6", data_long$Week)] = "2"
data_new$Week[grep("V7", data_long$Week)] = "3"
data_new$Week[grep("V8", data_long$Week)] = "4"
data_new$Week <- as.numeric(data_new$Week)
data_new$Treatment <- as.factor(data_new$Treatment)
M <- 3
X <- bs(data_new$Week, df=M, degree = 3)
?bs
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
library(tidyr)
data_long <- gather(data, Week, measurement, V5:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
####
colnames(data_long)[4] = "Baseline"
colnames(data_long)[1] = "Subject"
colnames(data_long)[2] = "Treatment"
colnames(data_long)[3] = "Age"
data_new = data_long
data_new$Week <- as.character(data_new$Week)
#data_new$Week[grep("V4", data_long$Week)] = "0"
data_new$Week[grep("V5", data_long$Week)] = "1"
data_new$Week[grep("V6", data_long$Week)] = "2"
data_new$Week[grep("V7", data_long$Week)] = "3"
data_new$Week[grep("V8", data_long$Week)] = "4"
data_new$Week <- as.numeric(data_new$Week)
data_new$Treatment <- as.factor(data_new$Treatment)
basic_model4 <- gam(measurement~s(Week, k = 4)+as.factor(Treatment), data = data_new,
method = "REML")
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
library(tidyr)
library(mgcv)
data_long <- gather(data, Week, measurement, V5:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
####
colnames(data_long)[4] = "Baseline"
colnames(data_long)[1] = "Subject"
colnames(data_long)[2] = "Treatment"
colnames(data_long)[3] = "Age"
data_new = data_long
data_new$Week <- as.character(data_new$Week)
#data_new$Week[grep("V4", data_long$Week)] = "0"
data_new$Week[grep("V5", data_long$Week)] = "1"
data_new$Week[grep("V6", data_long$Week)] = "2"
data_new$Week[grep("V7", data_long$Week)] = "3"
data_new$Week[grep("V8", data_long$Week)] = "4"
data_new$Week <- as.numeric(data_new$Week)
data_new$Treatment <- as.factor(data_new$Treatment)
basic_model4 <- gam(measurement~s(Week, k = 4)+as.factor(Treatment), data = data_new,
method = "REML")
##################With AR correlation
AR_model1 <- gamm(measurement~s(Week, k = 4)+as.factor(Treatment),data = data_new,correlation=corAR1(form=~1|Subject))
AR_model2 <- gamm(measurement~s(Week, k = 4)+as.factor(Treatment),data = data_new,random=list(Subject=~1),correlation=corAR1())
ARMA_model <- gamm(measurement~s(Week, k = 4)+as.factor(Treatment),data = data_new,random=list(Subject=~1),correlation=corARMA(p = 1, q = 1))
data_new$Week <- as.factor(data_new$Week)
contr.poly(4)
contrasts(data_new$Week) = contr.poly(4)
summary(lm(measurement ~ Week, data=data_new))
library(nlme)
summary(lme(measurement ~ Week, random = ~1|Subject, data = data_new))
data <- read.table("Treatment of Lead Exposed Children Trial.txt", quote="\"", comment.char="")
data_long <- gather(data, Week, measurement, V3:V6, factor_key=TRUE)
data_long
data_long <- data_long[order(data_long$V1), ]
data_long
#####################ANOVA analysis###################
data_new = data_long
data_new$Week <- as.character(data_new$Week)
data_new$Week[grep("V3", data_long$Week)] = "0"
data_new$Week[grep("V4", data_long$Week)] = "1"
data_new$Week[grep("V5", data_long$Week)] = "4"
data_new$Week[grep("V6", data_long$Week)] = "6"
data_new$Week <- as.numeric(data_new$Week)
View(data_new)
ls <- lm(measurement~as.factor(Week)*as.factor(V2), data=data_new)
anova(ls)
X <- model.matrix(ls)
View(X)
ls <- lm(measurement~as.factor(Week)*as.factor(V2), data=data_new)
gtsummary::tbl_regression(ls)
res <- lme4::lmer(measurement ~ as.factor(Week)*as.factor(V2) + (1|V1), data = data_new)
gtsummary::tbl_regression(res)
dim(X)
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
library(tidyr)
data_long <- gather(data, Week, measurement, V5:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
####
colnames(data_long)[4] = "Baseline"
colnames(data_long)[1] = "Subject"
colnames(data_long)[2] = "Treatment"
colnames(data_long)[3] = "Age"
data_new = data_long
data_new$Week <- as.character(data_new$Week)
#data_new$Week[grep("V4", data_long$Week)] = "0"
data_new$Week[grep("V5", data_long$Week)] = "1"
data_new$Week[grep("V6", data_long$Week)] = "2"
data_new$Week[grep("V7", data_long$Week)] = "3"
data_new$Week[grep("V8", data_long$Week)] = "4"
data_new$Week <- as.numeric(data_new$Week)
data_new$Treatment <- as.factor(data_new$Treatment)
data_new$Week <- as.factor(data_new$Week)
data_new$measurement <- log(data_new$measurement)
data_new$Baseline <- log(data_new$Baseline)
contr.poly(4)
contrasts(data_new$Week) = contr.poly(4)
summary(lm(measurement ~ Week, data=data_new))
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
library(tidyr)
data_long <- gather(data, Week, measurement, V5:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
####
colnames(data_long)[4] = "Baseline"
colnames(data_long)[1] = "Subject"
colnames(data_long)[2] = "Treatment"
colnames(data_long)[3] = "Age"
data_new = data_long
data_new$Week <- as.character(data_new$Week)
#data_new$Week[grep("V4", data_long$Week)] = "0"
data_new$Week[grep("V5", data_long$Week)] = "1"
data_new$Week[grep("V6", data_long$Week)] = "2"
data_new$Week[grep("V7", data_long$Week)] = "3"
data_new$Week[grep("V8", data_long$Week)] = "4"
data_new$Week <- as.numeric(data_new$Week)
data_new$Treatment <- as.factor(data_new$Treatment)
data_new$Week <- as.factor(data_new$Week)
data_new$measurement <- log(data_new$measurement)
data_new$Baseline <- log(data_new$Baseline+1)
contr.poly(4)
contrasts(data_new$Week) = contr.poly(4)
summary(lm(measurement ~ Week, data=data_new))
data <- read.table("H:/Documents/GitHub/LDA/Codes/Data on seizure counts.txt", quote="\"", comment.char="")
library(tidyr)
data_long <- gather(data, Week, measurement, V5:V8, factor_key=TRUE)
data_long <- data_long[order(data_long$V1), ]
####
colnames(data_long)[4] = "Baseline"
colnames(data_long)[1] = "Subject"
colnames(data_long)[2] = "Treatment"
colnames(data_long)[3] = "Age"
data_new = data_long
data_new$Week <- as.character(data_new$Week)
#data_new$Week[grep("V4", data_long$Week)] = "0"
data_new$Week[grep("V5", data_long$Week)] = "1"
data_new$Week[grep("V6", data_long$Week)] = "2"
data_new$Week[grep("V7", data_long$Week)] = "3"
data_new$Week[grep("V8", data_long$Week)] = "4"
data_new$Week <- as.numeric(data_new$Week)
data_new$Treatment <- as.factor(data_new$Treatment)
data_new$Week <- as.factor(data_new$Week)
data_new$measurement <- log(data_new$measurement+1)
data_new$Baseline <- log(data_new$Baseline+1)
contr.poly(4)
contrasts(data_new$Week) = contr.poly(4)
summary(lm(measurement ~ Week, data=data_new))
